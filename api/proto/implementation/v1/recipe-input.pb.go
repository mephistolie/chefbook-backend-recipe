// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.12
// source: v1/recipe-input.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RecipeInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecipeId         *string           `protobuf:"bytes,1,opt,name=recipeId,proto3,oneof" json:"recipeId,omitempty"`
	UserId           string            `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
	Name             string            `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Visibility       string            `protobuf:"bytes,4,opt,name=visibility,proto3" json:"visibility,omitempty"`
	IsEncrypted      bool              `protobuf:"varint,5,opt,name=isEncrypted,proto3" json:"isEncrypted,omitempty"`
	Language         string            `protobuf:"bytes,6,opt,name=language,proto3" json:"language,omitempty"`
	Description      *string           `protobuf:"bytes,7,opt,name=description,proto3,oneof" json:"description,omitempty"`
	Tags             []string          `protobuf:"bytes,8,rep,name=tags,proto3" json:"tags,omitempty"`
	Servings         *int32            `protobuf:"varint,9,opt,name=servings,proto3,oneof" json:"servings,omitempty"`
	CookingTime      *int32            `protobuf:"varint,10,opt,name=cookingTime,proto3,oneof" json:"cookingTime,omitempty"`
	Calories         *int32            `protobuf:"varint,11,opt,name=calories,proto3,oneof" json:"calories,omitempty"`
	Macronutrients   *Macronutrients   `protobuf:"bytes,12,opt,name=macronutrients,proto3,oneof" json:"macronutrients,omitempty"`
	Ingredients      []*IngredientItem `protobuf:"bytes,13,rep,name=ingredients,proto3" json:"ingredients,omitempty"`
	Cooking          []*CookingItem    `protobuf:"bytes,14,rep,name=cooking,proto3" json:"cooking,omitempty"`
	Version          *int32            `protobuf:"varint,15,opt,name=version,proto3,oneof" json:"version,omitempty"`
	UserSubscription string            `protobuf:"bytes,16,opt,name=userSubscription,proto3" json:"userSubscription,omitempty"`
}

func (x *RecipeInput) Reset() {
	*x = RecipeInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_recipe_input_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecipeInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecipeInput) ProtoMessage() {}

func (x *RecipeInput) ProtoReflect() protoreflect.Message {
	mi := &file_v1_recipe_input_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecipeInput.ProtoReflect.Descriptor instead.
func (*RecipeInput) Descriptor() ([]byte, []int) {
	return file_v1_recipe_input_proto_rawDescGZIP(), []int{0}
}

func (x *RecipeInput) GetRecipeId() string {
	if x != nil && x.RecipeId != nil {
		return *x.RecipeId
	}
	return ""
}

func (x *RecipeInput) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *RecipeInput) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RecipeInput) GetVisibility() string {
	if x != nil {
		return x.Visibility
	}
	return ""
}

func (x *RecipeInput) GetIsEncrypted() bool {
	if x != nil {
		return x.IsEncrypted
	}
	return false
}

func (x *RecipeInput) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *RecipeInput) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *RecipeInput) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *RecipeInput) GetServings() int32 {
	if x != nil && x.Servings != nil {
		return *x.Servings
	}
	return 0
}

func (x *RecipeInput) GetCookingTime() int32 {
	if x != nil && x.CookingTime != nil {
		return *x.CookingTime
	}
	return 0
}

func (x *RecipeInput) GetCalories() int32 {
	if x != nil && x.Calories != nil {
		return *x.Calories
	}
	return 0
}

func (x *RecipeInput) GetMacronutrients() *Macronutrients {
	if x != nil {
		return x.Macronutrients
	}
	return nil
}

func (x *RecipeInput) GetIngredients() []*IngredientItem {
	if x != nil {
		return x.Ingredients
	}
	return nil
}

func (x *RecipeInput) GetCooking() []*CookingItem {
	if x != nil {
		return x.Cooking
	}
	return nil
}

func (x *RecipeInput) GetVersion() int32 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

func (x *RecipeInput) GetUserSubscription() string {
	if x != nil {
		return x.UserSubscription
	}
	return ""
}

var File_v1_recipe_input_proto protoreflect.FileDescriptor

var file_v1_recipe_input_proto_rawDesc = []byte{
	0x0a, 0x15, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x2d, 0x69, 0x6e, 0x70, 0x75,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x76, 0x31, 0x1a, 0x17, 0x76, 0x31, 0x2f,
	0x6d, 0x61, 0x63, 0x72, 0x6f, 0x6e, 0x75, 0x74, 0x72, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x76, 0x31, 0x2f, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x76, 0x31, 0x2f, 0x63, 0x6f,
	0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xaf, 0x05, 0x0a, 0x0b,
	0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1f, 0x0a, 0x08, 0x72,
	0x65, 0x63, 0x69, 0x70, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x08, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x16, 0x0a, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x76, 0x69, 0x73, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x76, 0x69,
	0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x73, 0x45, 0x6e,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69,
	0x73, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67,
	0x73, 0x12, 0x1f, 0x0a, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x05, 0x48, 0x02, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x73, 0x88,
	0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x48, 0x03, 0x52, 0x0b, 0x63, 0x6f, 0x6f, 0x6b, 0x69,
	0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x63, 0x61, 0x6c,
	0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x48, 0x04, 0x52, 0x08, 0x63,
	0x61, 0x6c, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x88, 0x01, 0x01, 0x12, 0x3f, 0x0a, 0x0e, 0x6d, 0x61,
	0x63, 0x72, 0x6f, 0x6e, 0x75, 0x74, 0x72, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x63, 0x72, 0x6f, 0x6e, 0x75, 0x74,
	0x72, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x48, 0x05, 0x52, 0x0e, 0x6d, 0x61, 0x63, 0x72, 0x6f, 0x6e,
	0x75, 0x74, 0x72, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x88, 0x01, 0x01, 0x12, 0x34, 0x0a, 0x0b, 0x69,
	0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x0b, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74,
	0x73, 0x12, 0x29, 0x0a, 0x07, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x18, 0x0e, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x07, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x1d, 0x0a, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x48, 0x06, 0x52,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x10, 0x75,
	0x73, 0x65, 0x72, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x75, 0x73, 0x65, 0x72, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x72, 0x65, 0x63, 0x69,
	0x70, 0x65, 0x49, 0x64, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67,
	0x73, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d,
	0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x63, 0x61, 0x6c, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x42, 0x11,
	0x0a, 0x0f, 0x5f, 0x6d, 0x61, 0x63, 0x72, 0x6f, 0x6e, 0x75, 0x74, 0x72, 0x69, 0x65, 0x6e, 0x74,
	0x73, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x3d, 0x5a,
	0x3b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x65, 0x70, 0x68,
	0x69, 0x73, 0x74, 0x6f, 0x6c, 0x69, 0x65, 0x2f, 0x63, 0x68, 0x65, 0x66, 0x62, 0x6f, 0x6f, 0x6b,
	0x2d, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2d, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_v1_recipe_input_proto_rawDescOnce sync.Once
	file_v1_recipe_input_proto_rawDescData = file_v1_recipe_input_proto_rawDesc
)

func file_v1_recipe_input_proto_rawDescGZIP() []byte {
	file_v1_recipe_input_proto_rawDescOnce.Do(func() {
		file_v1_recipe_input_proto_rawDescData = protoimpl.X.CompressGZIP(file_v1_recipe_input_proto_rawDescData)
	})
	return file_v1_recipe_input_proto_rawDescData
}

var file_v1_recipe_input_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_v1_recipe_input_proto_goTypes = []interface{}{
	(*RecipeInput)(nil),    // 0: v1.RecipeInput
	(*Macronutrients)(nil), // 1: v1.Macronutrients
	(*IngredientItem)(nil), // 2: v1.IngredientItem
	(*CookingItem)(nil),    // 3: v1.CookingItem
}
var file_v1_recipe_input_proto_depIdxs = []int32{
	1, // 0: v1.RecipeInput.macronutrients:type_name -> v1.Macronutrients
	2, // 1: v1.RecipeInput.ingredients:type_name -> v1.IngredientItem
	3, // 2: v1.RecipeInput.cooking:type_name -> v1.CookingItem
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_v1_recipe_input_proto_init() }
func file_v1_recipe_input_proto_init() {
	if File_v1_recipe_input_proto != nil {
		return
	}
	file_v1_macronutrients_proto_init()
	file_v1_ingredient_proto_init()
	file_v1_cooking_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_v1_recipe_input_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecipeInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_v1_recipe_input_proto_msgTypes[0].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_v1_recipe_input_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_v1_recipe_input_proto_goTypes,
		DependencyIndexes: file_v1_recipe_input_proto_depIdxs,
		MessageInfos:      file_v1_recipe_input_proto_msgTypes,
	}.Build()
	File_v1_recipe_input_proto = out.File
	file_v1_recipe_input_proto_rawDesc = nil
	file_v1_recipe_input_proto_goTypes = nil
	file_v1_recipe_input_proto_depIdxs = nil
}
